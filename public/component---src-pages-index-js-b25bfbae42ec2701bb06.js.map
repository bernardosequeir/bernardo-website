{"version":3,"sources":["webpack:///./src/components/layout.js","webpack:///./src/pages/index.js"],"names":["children","data","useStaticQuery","className","to","css","site","siteMetadata","title","allMarkdownRemark","edges","filter","node","fields","slug","includes","map","key","id","frontmatter","date","excerpt","query"],"mappings":"2FAAA,sC,GAAA,U,0FAMe,gBAAmB,IAAhBA,EAAe,EAAfA,SACVC,EAAOC,YAAe,cAW5B,OACE,mBAAKC,UAAU,QACb,YAAC,IAAD,CAAMC,GAAG,KACP,kBACED,UAAU,YACVE,IAAG,GAIFJ,EAAKK,KAAKC,aAAaC,QAG5B,YAAC,IAAD,CACEL,UAAU,SACVC,GAAG,UACHC,IAAG,GAHL,SASCL,K,kCCvCP,+F,wLAMe,0BAAGC,EAAH,EAAGA,KAAH,OACb,YAAC,IAAD,KACE,uBACE,kBACEE,UAAU,WACVE,IAAG,GAFL,cASCJ,EAAKQ,kBAAkBC,MACrBC,QAAO,qBAAGC,KAAgBC,OAAOC,KAAKC,SAAS,eAC/CC,KAAI,gBAAGJ,EAAH,EAAGA,KAAH,OACH,mBAAKK,IAAKL,EAAKM,GAAIf,UAAU,SAC3B,YAAC,IAAD,CACEC,GAAIQ,EAAKC,OAAOC,KAChBT,IAAG,GAKH,kBACEF,UAAU,YACVE,IAAG,GAIFO,EAAKO,YAAYX,MANpB,IAM2B,6BAASI,EAAKO,YAAYC,OAErD,iBAAGjB,UAAU,SAASS,EAAKS,iBAQlC,IAAMC,EAAK,c","file":"component---src-pages-index-js-b25bfbae42ec2701bb06.js","sourcesContent":["/* eslint-disable react/display-name */\nimport React from 'react';\nimport { css } from '@emotion/core';\nimport { useStaticQuery, Link, graphql } from 'gatsby';\nimport '../styles/layout.scss';\n\nexport default ({ children }) => {\n  const data = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `\n  );\n  return (\n    <div className=\"main\">\n      <Link to=\"/\">\n        <h3\n          className=\"display-1\"\n          css={css`\n            display: inline-block;\n          `}\n        >\n          {data.site.siteMetadata.title}\n        </h3>\n      </Link>\n      <Link\n        className=\"button\"\n        to=\"/about/\"\n        css={css`\n          float: right;\n        `}\n      >\n        About\n      </Link>\n      {children}\n    </div>\n  );\n};\n","/* eslint-disable react/display-name */\nimport React from 'react';\nimport { css } from '@emotion/core';\nimport { Link, graphql } from 'gatsby';\nimport Layout from '../components/layout';\n\nexport default ({ data }) => (\n  <Layout>\n    <div>\n      <h1\n        className=\"headline\"\n        css={css`\n          display: inline-block;\n          border-bottom: 1px solid;\n        `}\n      >\n        Blog Posts\n      </h1>\n      {data.allMarkdownRemark.edges\n        .filter(({ node }) => node.fields.slug.includes('complete'))\n        .map(({ node }) => (\n          <div key={node.id} className=\"posts\">\n            <Link\n              to={node.fields.slug}\n              css={css`\n                text-decoration: none;\n                color: inherit;\n              `}\n            >\n              <h3\n                className=\"subhead-1\"\n                css={css`\n                  margin-bottom: 1rem};\n                `}\n              >\n                {node.frontmatter.title} <span>â€” {node.frontmatter.date}</span>\n              </h3>\n              <p className=\"label\">{node.excerpt}</p>\n            </Link>\n          </div>\n        ))}\n    </div>\n  </Layout>\n);\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n          }\n          fields {\n            slug\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}