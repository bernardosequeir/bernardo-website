{"componentChunkName":"component---src-templates-blog-post-js","path":"/over_the_wire/Natas/Natas9-10/explanation/","result":{"data":{"markdownRemark":{"html":"<p>This level introduces command injection, so let's get right into it and get our hands dirty, this is one of the things that felt really cool when I was starting out, so I hope you like it.</p>\n<p>All the code that matters for this level is displayed right here:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?</span>\n<span class=\"token variable\">$key</span> <span class=\"token operator\">=</span> <span class=\"token double-quoted-string string\">\"\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">array_key_exists</span><span class=\"token punctuation\">(</span><span class=\"token double-quoted-string string\">\"needle\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$_REQUEST</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token variable\">$key</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_REQUEST</span><span class=\"token punctuation\">[</span><span class=\"token double-quoted-string string\">\"needle\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$key</span> <span class=\"token operator\">!=</span> <span class=\"token double-quoted-string string\">\"\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">passthru</span><span class=\"token punctuation\">(</span><span class=\"token double-quoted-string string\">\"grep -i <span class=\"token interpolation\"><span class=\"token variable\">$key</span></span> dictionary.txt\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token delimiter important\">?></span></span></code></pre></div>\n<p>Let's focus on the <a href=\"https://www.php.net/manual/en/function.passthru.php\">passthru</a> function, it uses our input as a filter for the grep command, and it's our only way of interacting with the website so we've gotta do something with it! What happens if you insert a ; in the middle of a bash command? Oh, you interrupt it? And in this case we can run anything we want instead of that lousy grep? Huh maybe if we cat /etc/natas_webpass/natas10 we can get the password ðŸ˜‰</p>","frontmatter":{"title":""}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/over_the_wire/Natas/Natas9-10/explanation/"}}}